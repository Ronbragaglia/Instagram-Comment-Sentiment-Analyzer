# -*- coding: utf-8 -*-
"""Instagram comment sentiment

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kekS52kJ5yMQJYDwTgmfo1rKpaO--yMg
"""

!pip install instaloader
!pip install vaderSentiment


import instaloader
import os
import re
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer


loader = instaloader.Instaloader()

def clean_text(text):
    """Limpa o texto, removendo URLs e hashtags."""
    text = re.sub(r'http\S+|www\S+|https\S+', '', text, flags=re.MULTILINE)
    text = re.sub(r'\@\w+|\#', '', text)
    return text.strip()

def collect_instagram_data(username, count=5):
    """Coleta os dados de um perfil do Instagram."""
    try:

        loader.load_session_from_file(username)
        print("Sessão carregada com sucesso!")
    except FileNotFoundError:
        print("Arquivo de sessão não encontrado. Realizando login...")
        instagram_user = os.getenv('INSTAGRAM_USER')
        instagram_password = os.getenv('INSTAGRAM_PASSWORD')
        max_attempts = 5
        for attempt in range(max_attempts):
            try:

                loader.login(instagram_user, instagram_password)
                print("Login bem-sucedido!")
                loader.save_session_to_file()
                break
            except instaloader.LoginException as e:
                print(f"Tentativa de login falhou: {e}")
                if attempt < max_attempts - 1:
                    print("Tentando novamente...")
                else:
                    print("Todas as tentativas de login falharam.")
                    return []
    try:

        profile = instaloader.Profile.from_username(loader.context, username)
        posts = profile.get_posts()
        collected_posts = []


        for post in posts:
            if len(collected_posts) >= count:
                break
            collected_posts.append(post)

        return collected_posts
    except Exception as e:
        print(f"Erro ao coletar dados: {e}")
        return []

def analyze_sentiments_vader(comments):
    """Analisa os sentimentos dos comentários usando o VADER."""
    analyzer = SentimentIntensityAnalyzer()
    comments_data = []
    for comment in comments:
        cleaned_comment = clean_text(comment.text)
        sentiment_scores = analyzer.polarity_scores(cleaned_comment)
        sentiment = sentiment_scores['compound']
        comments_data.append({'text': cleaned_comment, 'sentiment': sentiment})
    return comments_data


username_to_analyze = 'exemplo_de_usuario'
posts = collect_instagram_data(username_to_analyze, count=5)

if posts:
    for post in posts:
        print(f"\nPost: {post.url}")
        comments_data = analyze_sentiments_vader(post.get_comments())
        for comment in comments_data:
            sentiment_label = "Positivo" if comment['sentiment'] > 0 else "Negativo" if comment['sentiment'] < 0 else "Neutro"
            print(f"Comentário: {comment['text']}, Sentimento: {sentiment_label}, Score: {comment['sentiment']}")
else:
    print("Nenhuma postagem encontrada.")